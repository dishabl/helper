// import "./App.css";

function Components() {
  return (
    <div>
      <h2 className="content-tytle">Компоненты (Components)</h2>
      <p>
        Компоненты - это небольшие, переиспользуемые элементы пользовательского
        интерфейса, которые объединены вместе, чтобы создать более крупные
        приложения.
      </p>
      <p>
        Компоненты позволяют разбить интерфейс на независимые части, про которые
        легко думать в отдельности. Например, всем известный интерфейс можно
        разбить на такие компоненты.
      </p>
      <p>
        React компоненты могут быть <b>классовыми</b> или <b>функциональными</b>
        . Пример объявления классового компонента в React:
      </p>
      <pre>
        <code>{`class MyComponent extends React.Component {
  render() {
    return <div>Hello, Redev!</div>;
  }
}
export default MyComponent;`}</code>
      </pre>
      <p>Пример объявления функционального компонента в React:</p>
      <pre>
        <code>{`const MyComponent = () => {
  return <div>Hello, Redev!</div>;
}
export default MyComponent;`}</code>
      </pre>
      <p>
        Оба примера создают компонент, который отображает текст "Hello, Redev!".
        Разница заключается в том, что классовый компонент наследуется от
        базового класса React.Component и имеет доступ к дополнительным
        функциям, таким как состояние и методы жизненного цикла.
      </p>
      <p>
        Сейчас для объявления компонент используется функциональный подход.
        Классы потихоньку вымирают. Хотя еще можно встретить проекты, где
        придется поддерживать код написанный на классах.
      </p>
      <p>
        <b>Компонента должна себя вести как чистая функция. “Чистой”</b>
        называется функция, которая:{" "}
        <p>
          1. Для одинаковых входных данных всегда возвращает один результат.
        </p>{" "}
        <p>
          2. Не имеет побочных эффектов (то есть не изменяет внешние состояния).
        </p>{" "}
        <p>3. Не зависит от внешних состояний.</p>
      </p>
    </div>
  );
}

export default Components;
